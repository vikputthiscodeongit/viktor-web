Issues

Types
* Bug:          3
* Check:        1
* Improvement: 13

Departments
* Accessibility: 5
* Code quality:  2
* Design:        5
* General:       3
* Performance:   2
* Security:      2
* UX:            4

Related languages
* HTML: 1
* CSS:  7
* JS:  12
* PHP:  2




General
  * BUG / Design / JS - CSS: section#home height is incorrect (check on Android)

  * IMPROVEMENT / Code quality / JS: Move some methods between objects

  * IMPROVEMENT / General: favicon sizes can be improved

  * IMPROVEMENT / General: SVG Content-Type header is incorrect according to webhint


Alert
  * IMPROVEMENT / Accessibility / JS: communicate state changes to screen readers


Input
  * BUG / Design / JS - CSS: .field--ifl <label>s should have a side margin for the scrollbar when used in conjunction with a <textarea>

  * IMPROVEMENT / UX - Accessibility / HTML - JS: .field--ifl <label>s should focus input when clicked

  * IMPROVEMENT / UX - Accessibility - Design / CSS: .field--ifl <label>s have insufficient contrast according to the WCAG standards

  * IMPROVEMENT / Design / CSS: .field--ifl <label> color & <input type="submit"> background-color may be changed for aesthetic reasons

  * IMPROVEMENT / Design / CSS: <textarea> should have a pretty scrollbar


WPCF7
  General
    * CHECK - General / JS: Check if all the functions are properly initialized when there are multiple forms on page

  Validation
    * BUG / UX / JS - CSS: A warning border is set on non-required div.field s if their input is both non-empty and shorter than the set minlength.

    * IMPROVEMENT / UX - Accessibility / JS - CSS: Place cross at the end of validated <input>s with invalid input

    * IMPROVEMENT / Accessibility / JS: Scroll to first invalid <input> after validation
      > Existing function (wpcf7.input.scrollToInvalid()) has a bug:
          After a failed form submission, scrolls right on the x-axis into the site's overflow

  CAPTCHA
    * IMPROVEMENT / Performance - Code quality / JS: Change CAPTCHA behaviour on fresh form load (to one of the following three options):
      a. Prevent form submission the first 3500ms after the first interaction with said form
      b. Prevent form submission the first 3500ms after DOMContentLoaded
      c. Start rapid refresh only after the user has interacted with the form

    * IMPROVEMENT / Performance - Security / JS - PHP: Generate <label> & <input> in PHP (?)

    * IMPROVEMENT / Security / JS - PHP: Generate ID & <input> name in PHP (?)
      > Generate random int
      > Insert in DOM el
      > Get int from DOM el
