.wpcf7 {
    &-form {
        label + br {
            display: none;
        }
    }

    &-not-valid-tip {
        margin-top: rem(8px);
    }

    &-mc-field-star {
        @extend label;
        align-self: flex-start;
        margin-left: rem(6px);
    }

    .wpcf7-submit + .ajax-loader {
        margin-left: rem(8px);
    }
}

.form {
    margin-top: rem(30px);

    @include respond-above(md) {
        margin-top: rem(40px);
    }

    &__group {
        margin-top: rem(30px);

        @include respond-above(md) {
            margin-top: rem(40px);
        }

        &:first-child,
        &.first-of-class {
            margin-top: 0;
        }
    }

    &__ajax-loader {
        font-size: rem(24px);

        .form__group.field--inline & {
            flex-shrink: 0;
        }
    }
}

.field {
    max-width: $input-max-width;

    @include respond-above(xl) {
        max-width: $input-xl-max-width;
    }

    @include respond-above(xxl) {
        max-width: $input-xxl-max-width;
    }

    &--ifl {
        position: relative;
    }

    &--inline {
        display: flex;
        align-items: center;
    }

    .form__group & {
        margin-top: rem(20px);

        @include respond-above(md) {
            margin-top: rem(30px);
        }

        &:first-child {
            margin-top: 0;
        }
    }
}

label {
    display: block;
    font-family: $headings-font-family;
    font-weight: $headings-font-weight;

    .field--ifl & {
        .js & {
            position: absolute;
            top: rem(2px);
            left: rem(2px);
            right: rem(2px);
            z-index: 1;
            margin-bottom: 0;
            padding: rem(13px) rem(12px) rem(5px);
            line-height: 1;
            font-size: rem(13px);
            font-weight: $font-weight-base;
            color: $blue;
            background-color: $off-white-dark;
            border-top-left-radius: rem(4px);
            border-top-right-radius: rem(4px);

            @media (prefers-contrast: high) {
                background-color: $white;
            }
        }
    }

    .field--inline & {
        flex-shrink: 0;
        margin-bottom: 0;
    }
}

// The following input types should preferably not be targeted, but are with the current selector: button, checkbox, color, file, hidden, image, radio, range, reset & submit.
input,
textarea {
    width: 100%;
    padding: rem(12px);
    line-height: $line-height-base;
    font-size: $font-size-base;
    background-color: $off-white-dark;
    border: rem(2px) solid $off-white-dark;
    border-radius: rem(4px);
    transition: border-color $transition-base;

    @media (prefers-contrast: high) {
        background-color: $white;
        border-color: $black;
    }

    &:focus {
        border-color: $blue;
        outline: none;

        .field.is-valid & {
            border-color: $success;
        }
    }

    .form.invalid .field.is-invalid & {
        border-color: $warning;
    }

    .field--ifl & {
        .js & {
            padding-top: rem(31px);
            padding-bottom: rem(8px);
        }
    }

    .field--inline label + & {
        margin-left: rem(8px);
    }

    //
    // Input placeholder styling
    &::-webkit-input-placeholder {
        color: $gray;
    }

    &::-moz-placeholder {
        color: $gray;
    }

    &:-ms-input-placeholder {
        color: $gray;
    }

    &::placeholder {
        color: $gray;
    }
}

input {
    &[type="checkbox"],
    &[type="radio"] {
        width: auto;
    }

    //
    // Reset default :invalid styles.
    // General (IE, maybe more)
    &:invalid {
        outline: none;
    }

    // Gecko
    &:-moz-ui-invalid {
        box-shadow: none;
    }

    //
    // Autocomplete styling for WebKit-based browsers.
    &:-webkit-autofill,
    &:-internal-autofill-selected {
        box-shadow: 0 0 0 1000px $off-white-dark inset; // Equalling <input> height should suffice?

        @media (prefers-contrast: high) {
            box-shadow: 0 0 0 1000px $white inset;
        }
    }

    .field--ifl & {
        .js & {
            height: rem(69px); // Setting a fixed height is sadly the only way to guarantee consistent appearance across browsers.
        }
    }

    .field--inline & {
        &[type="number"],
        &[inputmode="numeric"] {
            width: rem(64px);
        }
    }
}

textarea {
    display: block;
}

.btn {
    display: inline-flex;
    align-items: center;
    width: 100%;
    padding: $btn-padding-y $btn-padding-x;
    text-decoration: none;
    font: $btn-font-weight $btn-font-size/$btn-line-height $btn-font-family;
    color: $white;
    background-color: $blue;
    border: none;
    border-radius: $btn-border-radius;
    transition: $btn-transition;
    transition-property: background-color, box-shadow;

    @include respond-above(xs) {
        width: auto;
    }

    &:hover {
        &:not(:disabled) {
            background-color: darken($blue, 5%);
        }

        &:disabled {
            cursor: default;
        }
    }

    &:focus {
        box-shadow: 0 0 rem(8px) rem(2px) rgba(0, 0, 0, 0.2);
        outline: none;
    }

    &__spinner {
        margin-left: rem(8px);

        .btn:not(.is-submitting) & {
            display: none;
        }
    }
}

// .toggle {
//     position: relative;
//     width: 52px;
//     height: 32px;
//     background: linear-gradient(180deg, #2D2F39 0%, #1F2027 100%);
//     border: 2px solid #474755;
//     border-radius: 16px;
//     transition: all 0.2s ease;
//
//     @at-root input.toggle {
//         cursor: pointer;
//         -webkit-tap-highlight-color: transparent;
//
//         &:focus {
//             outline: none;
//         }
//     }
//
//     &[type="checkbox"] {
//         appearance: none;
//     }
//
//     &:checked {
//         border-color: #654FEC;
//     }
//
//     &::after {
//         content: "";
//         position: absolute;
//         top: 2px;
//         left: 2px;
//         width: 24px;
//         height: 24px;
//         background: white;
//         border-radius: 50%;
//         box-shadow: 0 1px 2px rgba(44, 44, 44, 0.2);
//         transition: all 0.2s cubic-bezier(0.5, 0.1, 0.75, 1.35);
//
//         @at-root .toggle:checked::after {
//             transform: translatex(20px);
//         }
//     }
// }
